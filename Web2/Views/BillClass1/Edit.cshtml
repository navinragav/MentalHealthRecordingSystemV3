@model Web2.Models.BillClass1

@{
    ViewBag.Title = "Edit";

}

<h2>Edit</h2>
<h2 style="color:darkcyan">Bill Page</h2>
<p style=" color:darkblue"> Welcome : @ViewBag.user  &emsp;&emsp;&emsp; Role: @ViewBag.role &emsp;&emsp;&emsp;&emsp;  @Html.ActionLink("Main Page", "Index", "SecClass1")  &emsp;&emsp;&emsp;&emsp;  @Html.ActionLink("Logout", "signout", "LogClass1") </p>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.bid)

        <div class="form-group">
            @Html.LabelFor(model => model.PatientId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PatientId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.PatientId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="inner-addon left-addon">
                    <i class="glyphicon glyphicon-user"></i>
                    @Html.EditorFor(model => model.pname, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
                @Html.ValidationMessageFor(model => model.pname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Appointment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="inner-addon left-addon">
                    <i class="glyphicon glyphicon-calendar"></i>
                    @Html.EditorFor(model => model.Appointment, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
                @Html.ValidationMessageFor(model => model.Appointment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AppointmentTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="inner-addon left-addon">
                    <i class="glyphicon glyphicon-time"></i>
                    @Html.EditorFor(model => model.AppointmentTime, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
                @Html.ValidationMessageFor(model => model.AppointmentTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="inner-addon left-addon">
                    <i class="glyphicon glyphicon-calendar"></i>
                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Prescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Prescription, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Prescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="inner-addon left-addon">
                    <i class="glyphicon glyphicon-euro"></i>
                    @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly"} })
                </div>
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Lab_Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="inner-addon left-addon">
                    <i class="glyphicon glyphicon-euro"></i>
                    @Html.EditorFor(model => model.Lab_Amount, new { htmlAttributes = new { @class = "form-control",onChange= "return f1(this)" } })
                </div>
                @Html.ValidationMessageFor(model => model.Lab_Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <script language="javascript" type="text/javascript">
            function f1()
            {
                var amt, lamt, tot,vat,vatamt,net;
                amt = $("#Amount").val();
                lamt = $("#Lab_Amount").val();
                tot = parseFloat(amt) + parseFloat(lamt);
                $("#Total_Amount").val(tot);
                vatamt = (parseFloat(lamt) * 4 / 100);
                $("#Vat").val(vatamt);
                net = parseFloat(amt) + parseFloat(lamt)+parseFloat(vatamt);
                $("#Net_Amount").val(net);
            }
            function f2() {
                var tot, vat,vatamt, net;
                tot = $("#Total_Amount").val();
                vat = $("#Vat").val();
                vatamt = (parseFloat(tot) * parseFloat(vat)/100);                
            }

        </script>


        <div class="form-group">
            @Html.LabelFor(model => model.Total_Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="inner-addon left-addon">
                    <i class="glyphicon glyphicon-euro"></i>
                    @Html.EditorFor(model => model.Total_Amount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
                @Html.ValidationMessageFor(model => model.Total_Amount, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Vat,"VAT (4 %)", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="inner-addon left-addon">

                    @Html.EditorFor(model => model.Vat, new { htmlAttributes = new { @class = "form-control" , @readonly = "readonly" } })
                </div>
                @Html.ValidationMessageFor(model => model.Vat, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Net_Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="inner-addon left-addon">
                    <i class="glyphicon glyphicon-euro"></i>
                    @Html.EditorFor(model => model.Net_Amount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
                @Html.ValidationMessageFor(model => model.Net_Amount, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cname, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.cname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
